<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.ujuit.udata.dao.MarketEqudDao">
	<resultMap id="BaseResultMap" type="com.ujuit.udata.bean.MarketEqud">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="trade_date" property="trade_date" jdbcType="DATE" />
		<result column="open_price" property="open_price" jdbcType="INTEGER" />
		<result column="close_price" property="close_price" jdbcType="INTEGER" />
		<result column="high_price" property="high_price" jdbcType="INTEGER" />
		<result column="low_price" property="low_price" jdbcType="INTEGER" />
		<result column="stock_code" property="stock_code" jdbcType="VARCHAR" />
		<result column="turnover_vol" property="turnover_vol" jdbcType="BIGINT" />
		<result column="turnover_value" property="turnover_value"
			jdbcType="DECIMAL" />
		<result column="pre_close" property="pre_close" jdbcType="INTEGER" />
		<result column="suffix" property="suffix" jdbcType="VARCHAR" />
	</resultMap>

	<select id="selectLatestMarketDatas" resultMap="BaseResultMap"
		resultType="java.util.List">
		select * from market_equd where trade_date = (select
		MAX(trade_date)
		from market_equd);
	</select>



	<select id="selectByStockCode" resultMap="BaseResultMap"
		resultType="java.util.List">
		select *from market_equd where stock_code=#{0} and suffix=#{1} and trade_date&gt;='2009-12-01'
	</select>


	<insert id="insert" parameterType="com.ujuit.udata.bean.MarketEqud">
		insert into
		market_equd(trade_date,open_price,close_price,high_price,low_price,stock_code
		,turnover_vol,turnover_value,pre_close,suffix) values (
		#{trade_date},
		#{open_price},#{close_price},#{high_price},#{low_price}
		,#{stock_code},#{turnover_vol},#{turnover_value},#{pre_close},#{suffix}
		)
	</insert>

	<insert id="insertMarketDatas" parameterType="java.util.List">
		insert into
		market_equd(trade_date,open_price,close_price,high_price,low_price,stock_code
		,turnover_vol,turnover_value,pre_close,suffix)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.trade_date},
			#{item.open_price},
			#{item.close_price},
			#{item.high_price},
			#{item.low_price},
			#{item.stock_code},
			#{item.turnover_vol},
			#{item.turnover_value},
			#{item.pre_close},
			#{item.suffix})
		</foreach>
		ON DUPLICATE KEY UPDATE open_price = VALUES(open_price)
	</insert>



</mapper>